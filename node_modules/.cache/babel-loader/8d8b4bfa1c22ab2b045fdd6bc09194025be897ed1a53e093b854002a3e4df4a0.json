{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giyun\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\5252\\\\52_AlsongDalsong\\\\src\\\\component\\\\ui\\\\Roulette.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Roulette = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n  const [rouletteData, setRouletteData] = useState(data);\n  const handleSpinClick = () => {\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\n    setPrizeNumber(newPrizeNumber);\n    setMustSpin(true);\n  };\n  useEffect(() => {\n    const addShortString = data.map(item => {\n      return {\n        completeOption: item.text,\n        option: item.text.length >= 30 ? item.text.substring(0, 30).trimEnd() + \"...\" : item.text\n      };\n    });\n    setRouletteData(addShortString);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      className: \"roulette-container\",\n      children: [/*#__PURE__*/_jsxDEV(Wheel, {\n        mustStartSpinning: mustSpin,\n        spinDuration: [0.2],\n        prizeNumber: prizeNumber,\n        data: rouletteData,\n        outerBorderColor: [\"#ccc\"],\n        outerBorderWidth: [9],\n        innerBorderColor: [\"#f2f2f2\"],\n        radiusLineColor: [\"tranparent\"],\n        radiusLineWidth: [1],\n        textColors: [\"#f5f5f5\"],\n        textDistance: 55,\n        fontSize: [10],\n        backgroundColors: [\"#3f297e\", \"#175fa9\", \"#169ed8\", \"#239b63\", \"#64b031\", \"#efe61f\", \"#f7a416\", \"#e6471d\", \"#dc0936\", \"#e5177b\", \"#be1180\", \"#871f7f\"],\n        onStopSpinning: () => {\n          setMustSpin(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button roulette-button\",\n        onClick: handleSpinClick,\n        children: \"\\u041A\\u0440\\u0443\\u0442\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prize-message\",\n      onClick: handleSpinClick,\n      disabled: mustSpin,\n      children: !mustSpin ? rouletteData[prizeNumber].completeOption : \"Кручу...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Roulette, \"65gCIEEL8Ad9pQ7s6a9OgU63ONM=\");\n_c = Roulette;\nexport default Roulette;\nvar _c;\n$RefreshReg$(_c, \"Roulette\");","map":{"version":3,"names":["React","useState","useEffect","Wheel","Roulette","data","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","rouletteData","setRouletteData","handleSpinClick","newPrizeNumber","Math","floor","random","length","addShortString","map","item","completeOption","text","option","substring","trimEnd"],"sources":["C:/Users/giyun/OneDrive/바탕 화면/5252/52_AlsongDalsong/src/component/ui/Roulette.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\n\r\nconst Roulette = ({ data }) => {\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(0);\r\n  const [rouletteData, setRouletteData] = useState(data);\r\n\r\n  const handleSpinClick = () => {\r\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\r\n    setPrizeNumber(newPrizeNumber);\r\n    setMustSpin(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const addShortString = data.map((item) => {\r\n      return {\r\n        completeOption: item.text,\r\n        option:\r\n          item.text.length >= 30\r\n            ? item.text.substring(0, 30).trimEnd() + \"...\"\r\n            : item.text\r\n      };\r\n    });\r\n    setRouletteData(addShortString);\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <div align=\"center\" className=\"roulette-container\">\r\n        <Wheel\r\n          mustStartSpinning={mustSpin}\r\n          spinDuration={[0.2]}\r\n          prizeNumber={prizeNumber}\r\n          data={rouletteData}\r\n          outerBorderColor={[\"#ccc\"]}\r\n          outerBorderWidth={[9]}\r\n          innerBorderColor={[\"#f2f2f2\"]}\r\n          radiusLineColor={[\"tranparent\"]}\r\n          radiusLineWidth={[1]}\r\n          textColors={[\"#f5f5f5\"]}\r\n          textDistance={55}\r\n          fontSize={[10]}\r\n          backgroundColors={[\r\n            \"#3f297e\",\r\n            \"#175fa9\",\r\n            \"#169ed8\",\r\n            \"#239b63\",\r\n            \"#64b031\",\r\n            \"#efe61f\",\r\n            \"#f7a416\",\r\n            \"#e6471d\",\r\n            \"#dc0936\",\r\n            \"#e5177b\",\r\n            \"#be1180\",\r\n            \"#871f7f\"\r\n          ]}\r\n          onStopSpinning={() => {\r\n            setMustSpin(false);\r\n          }}\r\n        />\r\n        <button className=\"button roulette-button\" onClick={handleSpinClick}>\r\n          Крутить\r\n        </button>\r\n      </div>\r\n      <br />\r\n      <button\r\n        className=\"prize-message\"\r\n        onClick={handleSpinClick}\r\n        disabled={mustSpin}\r\n      >\r\n        {!mustSpin ? rouletteData[prizeNumber].completeOption : \"Кручу...\"}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roulette;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,uBAAuB;AAAC;AAAA;AAE9C,MAAMC,QAAQ,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAACI,IAAI,CAAC;EAEtD,MAAMO,eAAe,GAAG,MAAM;IAC5B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGX,IAAI,CAACY,MAAM,CAAC;IAC9DR,cAAc,CAACI,cAAc,CAAC;IAC9BN,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAGb,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAK;MACxC,OAAO;QACLC,cAAc,EAAED,IAAI,CAACE,IAAI;QACzBC,MAAM,EACJH,IAAI,CAACE,IAAI,CAACL,MAAM,IAAI,EAAE,GAClBG,IAAI,CAACE,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,EAAE,GAAG,KAAK,GAC5CL,IAAI,CAACE;MACb,CAAC;IACH,CAAC,CAAC;IACFX,eAAe,CAACO,cAAc,CAAC;EACjC,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAEV,oBACE;IAAA,wBACE;MAAK,KAAK,EAAC,QAAQ;MAAC,SAAS,EAAC,oBAAoB;MAAA,wBAChD,QAAC,KAAK;QACJ,iBAAiB,EAAEC,QAAS;QAC5B,YAAY,EAAE,CAAC,GAAG,CAAE;QACpB,WAAW,EAAEE,WAAY;QACzB,IAAI,EAAEE,YAAa;QACnB,gBAAgB,EAAE,CAAC,MAAM,CAAE;QAC3B,gBAAgB,EAAE,CAAC,CAAC,CAAE;QACtB,gBAAgB,EAAE,CAAC,SAAS,CAAE;QAC9B,eAAe,EAAE,CAAC,YAAY,CAAE;QAChC,eAAe,EAAE,CAAC,CAAC,CAAE;QACrB,UAAU,EAAE,CAAC,SAAS,CAAE;QACxB,YAAY,EAAE,EAAG;QACjB,QAAQ,EAAE,CAAC,EAAE,CAAE;QACf,gBAAgB,EAAE,CAChB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACT;QACF,cAAc,EAAE,MAAM;UACpBH,WAAW,CAAC,KAAK,CAAC;QACpB;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF;QAAQ,SAAS,EAAC,wBAAwB;QAAC,OAAO,EAAEK,eAAgB;QAAA,UAAC;MAErE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,SAAS,EAAC,eAAe;MACzB,OAAO,EAAEA,eAAgB;MACzB,QAAQ,EAAEN,QAAS;MAAA,UAElB,CAACA,QAAQ,GAAGI,YAAY,CAACF,WAAW,CAAC,CAACa,cAAc,GAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA,gBACR;AAEP,CAAC;AAAC,GAxEIjB,QAAQ;AAAA,KAARA,QAAQ;AA0Ed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}