{"ast":null,"code":"var _jsxFileName = \"/Users/seohyunyu/Desktop/AlsongDalsong/src/component/ui/Roulette.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Roulette = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n  const [rouletteData, setRouletteData] = useState(data);\n\n  const handleSpinClick = () => {\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\n    setPrizeNumber(newPrizeNumber);\n    setMustSpin(true);\n  };\n\n  useEffect(() => {\n    const addShortString = data.map(item => {\n      return {\n        completeOption: item.text,\n        option: item.text.length >= 30 ? item.text.substring(0, 30).trimEnd() + \"...\" : item.text\n      };\n    });\n    setRouletteData(addShortString);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      className: \"roulette-container\",\n      children: [/*#__PURE__*/_jsxDEV(Wheel, {\n        mustStartSpinning: mustSpin,\n        spinDuration: [0.2],\n        prizeNumber: prizeNumber,\n        data: rouletteData,\n        outerBorderColor: [\"#ccc\"],\n        outerBorderWidth: [9],\n        innerBorderColor: [\"#f2f2f2\"],\n        radiusLineColor: [\"tranparent\"],\n        radiusLineWidth: [1],\n        textColors: [\"#f5f5f5\"],\n        textDistance: 55,\n        fontSize: [10],\n        backgroundColors: [\"#3f297e\", \"#175fa9\", \"#169ed8\", \"#239b63\", \"#64b031\", \"#efe61f\", \"#f7a416\", \"#e6471d\", \"#dc0936\", \"#e5177b\", \"#be1180\", \"#871f7f\"],\n        onStopSpinning: () => {\n          setMustSpin(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button roulette-button\",\n        onClick: handleSpinClick,\n        children: \"\\u041A\\u0440\\u0443\\u0442\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prize-message\",\n      onClick: handleSpinClick,\n      disabled: mustSpin,\n      children: !mustSpin ? rouletteData[prizeNumber].completeOption : \"Кручу...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Roulette, \"65gCIEEL8Ad9pQ7s6a9OgU63ONM=\");\n\n_c = Roulette;\nexport default Roulette;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roulette\");","map":{"version":3,"sources":["/Users/seohyunyu/Desktop/AlsongDalsong/src/component/ui/Roulette.js"],"names":["React","useState","useEffect","Wheel","Roulette","data","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","rouletteData","setRouletteData","handleSpinClick","newPrizeNumber","Math","floor","random","length","addShortString","map","item","completeOption","text","option","substring","trimEnd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\n\nconst Roulette = ({ data }) => {\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n  const [rouletteData, setRouletteData] = useState(data);\n\n  const handleSpinClick = () => {\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\n    setPrizeNumber(newPrizeNumber);\n    setMustSpin(true);\n  };\n\n  useEffect(() => {\n    const addShortString = data.map((item) => {\n      return {\n        completeOption: item.text,\n        option:\n          item.text.length >= 30\n            ? item.text.substring(0, 30).trimEnd() + \"...\"\n            : item.text\n      };\n    });\n    setRouletteData(addShortString);\n  }, [data]);\n\n  return (\n    <>\n      <div align=\"center\" className=\"roulette-container\">\n        <Wheel\n          mustStartSpinning={mustSpin}\n          spinDuration={[0.2]}\n          prizeNumber={prizeNumber}\n          data={rouletteData}\n          outerBorderColor={[\"#ccc\"]}\n          outerBorderWidth={[9]}\n          innerBorderColor={[\"#f2f2f2\"]}\n          radiusLineColor={[\"tranparent\"]}\n          radiusLineWidth={[1]}\n          textColors={[\"#f5f5f5\"]}\n          textDistance={55}\n          fontSize={[10]}\n          backgroundColors={[\n            \"#3f297e\",\n            \"#175fa9\",\n            \"#169ed8\",\n            \"#239b63\",\n            \"#64b031\",\n            \"#efe61f\",\n            \"#f7a416\",\n            \"#e6471d\",\n            \"#dc0936\",\n            \"#e5177b\",\n            \"#be1180\",\n            \"#871f7f\"\n          ]}\n          onStopSpinning={() => {\n            setMustSpin(false);\n          }}\n        />\n        <button className=\"button roulette-button\" onClick={handleSpinClick}>\n          Крутить\n        </button>\n      </div>\n      <br />\n      <button\n        className=\"prize-message\"\n        onClick={handleSpinClick}\n        disabled={mustSpin}\n      >\n        {!mustSpin ? rouletteData[prizeNumber].completeOption : \"Кручу...\"}\n      </button>\n    </>\n  );\n};\n\nexport default Roulette;\n"]},"metadata":{},"sourceType":"module"}